#!/usr/bin/env coffee

fs = require 'fs'
fs.path = require 'path'
railgun = require '../src/index'
program = require 'commander'

program
    .usage '[options] <entrypoint>'

# espy-related options
program
    .option '-d, --data [directory]', 'absolute or relative directory where there\'s data we need to pass as context to templates (will not pass any context if not specified)'

# envv-related options
program    
    .option '-e, --environment [name]',
        'the environment you want the output to adhere to [production]', 'production'
    .option '-p, --prefix [name]', 
        'the namespace prefix you use on environment data attributes, if any'
    .option '-h, --hint [pairs]',
        'provide hints to the CDN probe about where to find obscure or badly named libraries', ''

# railgun-related options
program
    .option '-r, --resource-root [root]',
        'A URL segment to be used as a prefix for all static file references, useful when using a separate hosting environment for static files (chiefly CDNs) in production'
    .option '-s, --single-page',
        'inline JavaScript and CSS into the index, reducing HTTP requests for single-page apps'
    .option '-i --ignore',
        'ignore, using the .gitignore format, files that should not be included in the build'
    .option '-n, --noop',
        'pass through, without processing, files that should be in the build but should not be touched'
    .option '-o, --output [directory]',
        'Where to write your bundled and optimized application (if you want output to files)'        
    .option '-p, --port [number]',
        'The port on which Backbone-Express should serve your application (if you want it to serve)'

# process options
program.parse process.argv

resolvePath = (path) ->
    if path[0] is '/'
        path
    else
        fs.path.join process.cwd(), path

if program.args[0] is 'build'
    src = resolvePath program.args[1]
    dest = resolvePath program.output

    console.log "#{src} => #{dest}"

    railgun.bundle src, 'production', no, yes, (errors, bundle) ->
        railgun.package bundle, dest, (errors) ->
            console.log errors
            console.log "Finished #{program.environment} build. Location: #{dest}"